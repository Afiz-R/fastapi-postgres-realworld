# Comment utiliser pre-commit en CLI :
# pip install pre-commit
# pre-commit install
# pre-commit autoupdate
# To run on all files :  pre-commit run --all-files
# To run on files you modified :
#  - git add <modified_files> /* add files to stage */
#  - pre-commit run  /* will clean staged files */
#  - git add <modified_and_cleaned_file> /* re-add files to stage */

# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
default_language_version:
  python: python3.11

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-added-large-files
      - id: check-ast
      - id: check-merge-conflict
      - id: check-added-large-files
      - id: check-builtin-literals
      - id: check-case-conflict
      # - id: check-json
      - id: check-merge-conflict
      - id: check-toml
      - id: check-xml
      - id: check-yaml
      - id: debug-statements
      - id: detect-private-key
      - id: double-quote-string-fixer # choix du single quote
      - id: end-of-file-fixer
      # - id: no-commit-to-branch
      - id: requirements-txt-fixer
      - id: trailing-whitespace
  # Dockerfile
  - repo: https://github.com/hadolint/hadolint
    rev: "v2.12.1-beta"
    hooks:
      - id: hadolint
        name: hadolint
        types: [dockerfile]
  # Python
  - repo: https://github.com/asottile/pyupgrade # upgrade vers des syntaxe plus récentes
    rev: v3.3.1
    hooks:
      - id: pyupgrade
        args: ["--py311-plus"]
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: "v3.0.0-alpha.4"
    hooks:
      - id: prettier
  - repo: https://github.com/psf/black # formatage des fichiers
    rev: 23.1.0
    hooks:
      - id: black
        args: ["--line-length=150", "--skip-string-normalization"] # pour empêcher les double-quoted string
  - repo: https://github.com/timothycrosley/isort.git
    rev: "5.12.0"
    hooks:
      - id: isort
  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.0.1
    hooks:
      - id: mypy
  - repo: https://github.com/pycqa/flake8 # linting des fichiers
    rev: "6.0.0"
    hooks:
      - id: flake8
        args: [
            --max-line-length=150,
            "--ignore=E203, W503",
            "--max-annotations-complexity=6",
            "--max-expression-complexity=6",
          ] # compatibilité avec black
        additional_dependencies:
          - flake8-bugbear
          - flake8-comprehensions
          - flake8-simplify
          - flake8-secure-coding-standard
          - flake8-quotes
          - flake8-implicit-str-concat
          - flake8-debugger # pour les breakpoints
          - flake8-print
          - flake8-variables-names
          - pep8-naming
          - flake8-annotations-complexity
          - flake8-expression-complexity
          - flake8-absolute-import
          - flake8-use-fstring
  # Sécurité
  - repo: https://github.com/PyCQA/bandit # lightweight alternative to semgrep
    rev: "1.7.4" # Update me!
    hooks:
      - id: bandit
  - repo: https://github.com/charliermarsh/ruff-pre-commit
    # Ruff version.
    rev: "v0.0.251"
    hooks:
      - id: ruff
        args: ["--line-length=150", "--exit-non-zero-on-fix"]
